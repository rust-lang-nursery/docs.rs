---

on: [push, pull_request]
name: CI

env:
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@master
        with:
          fetch-depth: 2

      # Caching
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Bin
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Git
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable Rust
        run: rustup update stable && rustup default stable

      - name: Install PostgreSQL
        run: |
          sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get install -y postgresql
          sudo systemctl start postgresql
          sudo -u postgres createuser $(whoami) -w
          sudo -u postgres createdb $(whoami) -O $(whoami)
          echo "::set-env name=CRATESFYI_DATABASE_URL::postgresql://$(whoami)@%2Fvar%2Frun%2Fpostgresql/$(whoami)"

      - name: Build docs.rs
        run: cargo build --locked

      - name: Prepare the test environment
        run: |
          prefix=$(pwd)/ignored/prefix
          mkdir -p ${prefix}/public-html
          echo "::set-env name=CRATESFYI_PREFIX::${prefix}"

      - name: Test docs.rs
        run: cargo test --locked -- --test-threads=1

  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@master
        with:
          fetch-depth: 2

      - name: Build the Docker image
        run: docker build -t docsrs .

      - name: Upload the Docker image to ECR
        uses: rust-lang/simpleinfra/github-actions/upload-docker-image@master
        with:
          image: docsrs
          repository: docsrs
          region: us-west-1
          aws_access_key_id: "${{ secrets.aws_access_key_id }}"
          aws_secret_access_key: "${{ secrets.aws_secret_access_key }}"
        if: github.ref == 'refs/heads/master'
