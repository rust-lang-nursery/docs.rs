name: CI

on: [push, pull_request]

env:
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - id: install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: restore build & cargo cache
        uses: Swatinem/rust-cache@v1

      - name: Launch postgres and min.io
        run: |
          cp .env.sample .env
          . .env
          mkdir -p ${CRATESFYI_PREFIX}/public-html
          docker-compose up -d db s3
          # Give the database enough time to start up
          sleep 5
          # Make sure the database is actually working
          psql "${CRATESFYI_DATABASE_URL}"

      - name: Build
        run: cargo build --workspace --locked

      - name: fast tests
        run: cargo test --workspace --locked

      - name: slow tests
        env:
          DOCSRS_INCLUDE_DEFAULT_TARGETS: true
          DOCSRS_DOCKER_IMAGE: ghcr.io/rust-lang/crates-build-env/linux-micro
        run: cargo test --workspace --locked -- --ignored

      - name: Clean up the database
        run: docker-compose down --volumes

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - id: install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - id: install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: restore build & cargo cache
        uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --workspace --locked -- -D warnings
